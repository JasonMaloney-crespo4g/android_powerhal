From 5de585312059d1ab1cf182c13835b2b24b8384dd Mon Sep 17 00:00:00 2001
From: Will Tisdale <willtisdale@gmail.com>
Date: Sat, 8 Sep 2012 20:46:10 +0100
Subject: [PATCH 1/2] grouper: Update PowerHAL for ondemand Inspired by
 cyanogens changes to the d2 PowerHAL, but mainly based
 on tuna.

---
 power/power.c |  111 +++++++++++++++++++++++++++++++++++----------------------
 1 file changed, 69 insertions(+), 42 deletions(-)

diff --git a/power/power.c b/power/power.c
index 687fe0b..bc6ec64 100644
--- a/power/power.c
+++ b/power/power.c
@@ -25,9 +25,19 @@
 #include <hardware/hardware.h>
 #include <hardware/power.h>
 
-#define BOOST_PATH      "/sys/devices/system/cpu/cpufreq/interactive/boost"
-static int boost_fd = -1;
-static int boost_warned;
+#define INT_BOOSTPULSE_PATH "/sys/devices/system/cpu/cpufreq/interactive/boostpulse"
+#define ONDEMAND_BOOSTPULSE_PATH "/sys/devices/system/cpu/cpufreq/ondemand/boostpulse"
+#define SAMPLING_RATE_ONDEMAND "/sys/devices/system/cpu/cpufreq/ondemand/sampling_rate"
+#define SAMPLING_RATE_SCREEN_ON "50000"
+#define SAMPLING_RATE_SCREEN_OFF "500000"
+
+
+struct grouper_power_module {
+    struct power_module base;
+    pthread_mutex_t lock;
+    int boostpulse_fd;
+    int boostpulse_warned;
+};
 
 static void sysfs_write(char *path, char *s)
 {
@@ -52,53 +62,64 @@ static void sysfs_write(char *path, char *s)
 
 static void grouper_power_init(struct power_module *module)
 {
-    /*
-     * cpufreq interactive governor: timer 20ms, min sample 100ms,
-     * hispeed 700MHz at load 40%
-     */
-
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/timer_rate",
-                "20000");
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/min_sample_time",
-                "30000");
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load",
-                "85");
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/boost_factor",
-		"0");
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/input_boost",
-		"1");
+    sysfs_write(SAMPLING_RATE_ONDEMAND, SAMPLING_RATE_SCREEN_ON);
 }
 
-static void grouper_power_set_interactive(struct power_module *module, int on)
+static int boostpulse_open(struct grouper_power_module *grouper)
 {
-    /*
-     * Lower maximum frequency when screen is off.  CPU 0 and 1 share a
-     * cpufreq policy.
-     */
+    char buf[80];
 
-    sysfs_write("/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq",
-                on ? "1300000" : "700000");
+    pthread_mutex_lock(&grouper->lock);
 
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/input_boost",
-                on ? "1" : "0");
+    if (grouper->boostpulse_fd < 0) {
+        grouper->boostpulse_fd = open(ONDEMAND_BOOSTPULSE_PATH, O_WRONLY);
+        if (grouper->boostpulse_fd < 0) {
+            grouper->boostpulse_fd = open(INT_BOOSTPULSE_PATH, O_WRONLY);
 
-    sysfs_write("/sys/devices/system/cpu/cpufreq/interactive/boost_factor",
-                on ? "0" : "2");
+            if (grouper->boostpulse_fd < 0 && !grouper->boostpulse_warned) {
+                strerror_r(errno, buf, sizeof(buf));
+                ALOGE("Error opening boostpulse: %s\n", buf);
+                grouper->boostpulse_warned = 1;
+            }
+        }
+    }
 
+    pthread_mutex_unlock(&grouper->lock);
+    return grouper->boostpulse_fd;
+}
+
+static void grouper_power_set_interactive(struct power_module *module, int on)
+{
+    sysfs_write("/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq",
+                on ? "1500000" : "700000");
+    sysfs_write(SAMPLING_RATE_ONDEMAND,
+                on ? SAMPLING_RATE_SCREEN_ON : SAMPLING_RATE_SCREEN_OFF);
 }
 
 static void grouper_power_hint(struct power_module *module, power_hint_t hint,
                             void *data)
 {
+    struct grouper_power_module *grouper = (struct grouper_power_module *) module;
     char buf[80];
     int len;
 
     switch (hint) {
+    case POWER_HINT_INTERACTION:
+        if (boostpulse_open(grouper) >= 0) {
+	    len = write(grouper->boostpulse_fd, "1", 1);
+
+	    if (len < 0) {
+	        strerror_r(errno, buf, sizeof(buf));
+		ALOGE("Error writing to boostpulse: %s\n", buf);
+	    }
+	}
+        break;
+
     case POWER_HINT_VSYNC:
         break;
 
     default:
-            break;
+        break;
     }
 }
 
@@ -106,18 +127,24 @@ static struct hw_module_methods_t power_module_methods = {
     .open = NULL,
 };
 
-struct power_module HAL_MODULE_INFO_SYM = {
-    .common = {
-        .tag = HARDWARE_MODULE_TAG,
-        .module_api_version = POWER_MODULE_API_VERSION_0_2,
-        .hal_api_version = HARDWARE_HAL_API_VERSION,
-        .id = POWER_HARDWARE_MODULE_ID,
-        .name = "Grouper Power HAL",
-        .author = "The Android Open Source Project",
-        .methods = &power_module_methods,
+struct grouper_power_module HAL_MODULE_INFO_SYM = {
+    base: {
+        common: {
+            tag: HARDWARE_MODULE_TAG,
+            module_api_version: POWER_MODULE_API_VERSION_0_2,
+            hal_api_version: HARDWARE_HAL_API_VERSION,
+            id: POWER_HARDWARE_MODULE_ID,
+            name: "Grouper Power HAL",
+            author: "The Android Open Source Project",
+            methods: &power_module_methods,
+        },
+
+       init: grouper_power_init,
+       setInteractive: grouper_power_set_interactive,
+       powerHint: grouper_power_hint,
     },
 
-    .init = grouper_power_init,
-    .setInteractive = grouper_power_set_interactive,
-    .powerHint = grouper_power_hint,
+    lock: PTHREAD_MUTEX_INITIALIZER,
+    boostpulse_fd: -1,
+    boostpulse_warned: 0,
 };
-- 
1.7.9.5

